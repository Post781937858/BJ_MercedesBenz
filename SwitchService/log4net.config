<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
  </configSections>
  <log4net>
    <logger name="agvtask_log">
      <level value="ALL" />
      <appender-ref ref="agvTaskAppender" />
    </logger>
    <logger name="ndctask_log">
      <level value="ALL" />
      <appender-ref ref="NDCTaskAppender" />
    </logger>
    <logger name="wcstask_log">
      <level value="ALL" />
      <appender-ref ref="WCSTaskAppender" />
    </logger>
    <logger name="task_log">
      <level value="ALL" />
      <appender-ref ref="TaskAppender" />
    </logger>
    <logger name="debug_log">
      <level value="ALL" />
      <appender-ref ref="DebugAppender" />
    </logger>
    <logger name="error_log">
      <level value="ALL" />
      <appender-ref ref="ErrorAppender" />
    </logger>

    <appender name="agvTaskAppender" type="log4net.Appender.RollingFileAppender">
      <!--保存路径：下面路径项目启动的时候自动在C盘中创建log、logError文件-->
      <file value="log\\agv\\" />
      <!-- 如果想在本项目中添加路径，那就直接去掉C:\\  只设置log\\LogError   项目启动中默认创建文件 -->
      <appendToFile value="true" />
      <!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
      <rollingStyle value="Composite" />
      <!--这是按日期产生文件夹-->
      <datePattern value="yyyy-MM-dd'_command.log'" />
      <!--是否只写到一个文件中-->
      <staticLogFileName value="false" />
      <!--保留的log文件数量 超过此数量后 自动删除之前的   好像只有在 按Size分割时有效 设定值value="－1"为不限文件数-->
      <param name="MaxSizeRollBackups" value="20" />
      <!--每个文件的大小。只在混合方式与文件大小方式下使用。超出大小后在所有文件名后自动增加正整数重新命名，数字最大的最早写入。可用的单位:KB|MB|GB。不要使用小数,否则会一直写入当前日志-->
      <maximumFileSize value="200MB" />
      <!-- layout 控制Appender的输出格式，也可以是xml  一个Appender只能是一个layout-->
      <layout type="log4net.Layout.PatternLayout">
        <!--<conversionPattern value="%newline %n记录时间：%date %n线程ID:[%thread] %n日志级别： %-5level %n错误描述：%message%newline %n" />-->
        <!--%m(message):输出的日志消息，如ILog.Debug(…)输出的一条消息
        %n(new line):换行
        %d(datetime):输出当前语句运行的时刻
        %r(run time):输出程序从运行到执行到当前语句时消耗的毫秒数
        %t(thread id):当前语句所在的线程ID
        %p(priority): 日志的当前优先级别，即DEBUG、INFO、WARN…等
        %c(class):当前日志对象的名称，例如：
        %f(file):输出语句所在的文件名。
        %l(line)：输出语句所在的行号。
        %数字：表示该项的最小长度，如果不够，则用空格填充，如“%-5level”表示level的最小宽度是5个字符，如果实际长度不够5个字符则以空格填充-->
        <!--<conversionPattern value="%n＝＝＝＝＝＝＝＝＝＝ %n【%d】【%message】" />-->
        <!--<conversionPattern value="%n＝＝＝＝＝＝＝＝＝＝ %n【记录时间】%date %n【错误描述】%message %n【错误详情】" />-->
        <conversionPattern value="%n＝＝＝＝＝＝＝＝＝＝ %n【时间】%date【内容】%message" />
      </layout>
    </appender>

    <appender name="WCSTaskAppender" type="log4net.Appender.RollingFileAppender">
      <!--保存路径：下面路径项目启动的时候自动在C盘中创建log、logError文件-->
      <file value="log\\WCS\\" />
      <!-- 如果想在本项目中添加路径，那就直接去掉C:\\  只设置log\\LogError   项目启动中默认创建文件 -->
      <appendToFile value="true" />
      <!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
      <rollingStyle value="Composite" />
      <!--这是按日期产生文件夹-->
      <datePattern value="yyyy-MM-dd'_command.log'" />
      <!--是否只写到一个文件中-->
      <staticLogFileName value="false" />
      <!--保留的log文件数量 超过此数量后 自动删除之前的   好像只有在 按Size分割时有效 设定值value="－1"为不限文件数-->
      <param name="MaxSizeRollBackups" value="20" />
      <!--每个文件的大小。只在混合方式与文件大小方式下使用。超出大小后在所有文件名后自动增加正整数重新命名，数字最大的最早写入。可用的单位:KB|MB|GB。不要使用小数,否则会一直写入当前日志-->
      <maximumFileSize value="200MB" />
      <!-- layout 控制Appender的输出格式，也可以是xml  一个Appender只能是一个layout-->
      <layout type="log4net.Layout.PatternLayout">
        <!--<conversionPattern value="%newline %n记录时间：%date %n线程ID:[%thread] %n日志级别： %-5level %n错误描述：%message%newline %n" />-->
        <!--%m(message):输出的日志消息，如ILog.Debug(…)输出的一条消息
        %n(new line):换行
        %d(datetime):输出当前语句运行的时刻
        %r(run time):输出程序从运行到执行到当前语句时消耗的毫秒数
        %t(thread id):当前语句所在的线程ID
        %p(priority): 日志的当前优先级别，即DEBUG、INFO、WARN…等
        %c(class):当前日志对象的名称，例如：
        %f(file):输出语句所在的文件名。
        %l(line)：输出语句所在的行号。
        %数字：表示该项的最小长度，如果不够，则用空格填充，如“%-5level”表示level的最小宽度是5个字符，如果实际长度不够5个字符则以空格填充-->
        <!--<conversionPattern value="%n＝＝＝＝＝＝＝＝＝＝ %n【%d】【%message】" />-->
        <!--<conversionPattern value="%n＝＝＝＝＝＝＝＝＝＝ %n【记录时间】%date %n【错误描述】%message %n【错误详情】" />-->
        <conversionPattern value="%n＝＝＝＝＝＝＝＝＝＝ %n【时间】%date【内容】%message" />
      </layout>
    </appender>


    <appender name="NDCTaskAppender" type="log4net.Appender.RollingFileAppender">
      <!--保存路径：下面路径项目启动的时候自动在C盘中创建log、logError文件-->
      <file value="log\\NDC\\" />
      <!-- 如果想在本项目中添加路径，那就直接去掉C:\\  只设置log\\LogError   项目启动中默认创建文件 -->
      <appendToFile value="true" />
      <!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
      <rollingStyle value="Composite" />
      <!--这是按日期产生文件夹-->
      <datePattern value="yyyy-MM-dd'_command.log'" />
      <!--是否只写到一个文件中-->
      <staticLogFileName value="false" />
      <!--保留的log文件数量 超过此数量后 自动删除之前的   好像只有在 按Size分割时有效 设定值value="－1"为不限文件数-->
      <param name="MaxSizeRollBackups" value="20" />
      <!--每个文件的大小。只在混合方式与文件大小方式下使用。超出大小后在所有文件名后自动增加正整数重新命名，数字最大的最早写入。可用的单位:KB|MB|GB。不要使用小数,否则会一直写入当前日志-->
      <maximumFileSize value="200MB" />
      <!-- layout 控制Appender的输出格式，也可以是xml  一个Appender只能是一个layout-->
      <layout type="log4net.Layout.PatternLayout">
        <!--<conversionPattern value="%newline %n记录时间：%date %n线程ID:[%thread] %n日志级别： %-5level %n错误描述：%message%newline %n" />-->
        <!--%m(message):输出的日志消息，如ILog.Debug(…)输出的一条消息
        %n(new line):换行
        %d(datetime):输出当前语句运行的时刻
        %r(run time):输出程序从运行到执行到当前语句时消耗的毫秒数
        %t(thread id):当前语句所在的线程ID
        %p(priority): 日志的当前优先级别，即DEBUG、INFO、WARN…等
        %c(class):当前日志对象的名称，例如：
        %f(file):输出语句所在的文件名。
        %l(line)：输出语句所在的行号。
        %数字：表示该项的最小长度，如果不够，则用空格填充，如“%-5level”表示level的最小宽度是5个字符，如果实际长度不够5个字符则以空格填充-->
        <!--<conversionPattern value="%n＝＝＝＝＝＝＝＝＝＝ %n【%d】【%message】" />-->
        <!--<conversionPattern value="%n＝＝＝＝＝＝＝＝＝＝ %n【记录时间】%date %n【错误描述】%message %n【错误详情】" />-->
        <conversionPattern value="%n＝＝＝＝＝＝＝＝＝＝ %n【时间】%date【Read】%message" />
      </layout>
    </appender>


    <!-- Task -->
    <appender name="TaskAppender" type="log4net.Appender.RollingFileAppender">
      <file value="log\\Task\\" />
      <appendToFile value="true" />
      <rollingStyle value="Composite" />
      <datePattern value="yyyy-MM-dd'_task.log'" />
      <staticLogFileName value="false" />
      <param name="MaxSizeRollBackups" value="20" />
      <maximumFileSize value="200MB" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%n＝＝＝＝＝＝＝＝＝＝ %n【时间】%date【内容】%message" />
        <!--<conversionPattern value="%n＝＝＝＝＝＝＝＝＝＝ %n【记录时间】%date %n【错误描述】%message %n【错误详情】" />-->
      </layout>
    </appender>

    <!-- Bug -->
    <appender name="DebugAppender" type="log4net.Appender.RollingFileAppender">
      <file value="log\\Debug\\" />
      <appendToFile value="true" />
      <rollingStyle value="Composite" />
      <datePattern value="yyyy-MM-dd'_debug.log'" />
      <staticLogFileName value="false" />
      <param name="MaxSizeRollBackups" value="20" />
      <maximumFileSize value="200MB" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%n＝＝＝＝＝＝＝＝＝＝ %n【时间】%date【Read】%message" />
      </layout>
    </appender>

    <!-- Error -->
    <appender name="ErrorAppender" type="log4net.Appender.RollingFileAppender">
      <file value="log\\Error\\" />
      <appendToFile value="true" />
      <rollingStyle value="Composite" />
      <datePattern value="yyyy-MM-dd'_error.log'" />
      <staticLogFileName value="false" />
      <param name="MaxSizeRollBackups" value="20" />
      <maximumFileSize value="200MB" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%n＝＝＝＝＝＝＝＝＝＝ %n【记录时间】%date %n【错误描述】%message %n【错误详情】" />
      </layout>
    </appender>
  </log4net>
</configuration>